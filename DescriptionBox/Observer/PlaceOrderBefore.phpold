<?php

namespace Newthink\DescriptionBox\Observer;

use Magento\Checkout\Model\Session;
use Magento\Framework\Event\Observer;
use Magento\Framework\Event\ObserverInterface;
// use Magento\Quote\Model\QuoteRepository;

class PlaceOrderBefore implements \Magento\Framework\Event\ObserverInterface
{
    protected $quoteRepository;

    public function __construct(
        Session $session,
        //QuoteRepository $quoteRepository,
        \Magento\Framework\App\RequestInterface $request,
        \Magento\Quote\Api\CartRepositoryInterface $quoteRepository
    )
    {
        $this->session = $session;
        $this->quoteRepository = $quoteRepository;
        $this->_request = $request;
    }
    
    public function execute(Observer $observer) 
    {           

        //$event = $observer->getEvent();
        $order = $observer->getEvent()->getOrder();
        // $quote = $observer->getEvent()->getQuote();
            


        $quoteId = $order->getQuoteId();
        $quote = $this->quoteRepository->get($quoteId);
        $quoteItems = $quote->getAllItems();
        // $quote = $event->getQuote()->getItemsCollection();

        

        foreach($quoteItems as $item){
            $orderItems  = $order->getItemById($item->getItemId());
            $order->setData('description_box', $item->getDescriptionBox());
            $writer = new \Zend\Log\Writer\Stream(BP . '/var/log/templog.log');
            $logger = new \Zend\Log\Logger();
            $logger->addWriter($writer);
            $logger->info($item->getDescriptionBox());
            $orderItems->setDescriptionBox($item->getDescriptionBox());
            die("");
            // $product = $observer->getEvent()->getDataByKey('product');
            // $item = $this->session->getQuote()->getItemByProduct($product);
            // $itemId = $item->getId();
            // $quoteItem = $quote->getItemById($itemId);
            

            // $description = $items['product_options']['info_buyRequest']['description_box'];
            // $order->setData('description_box', json_encode($description));
            // $order->setDescriptionBox($description);
            // $order->save(); 
            
        }
       
        return $this;
        

           
        
    }
    
}

?>